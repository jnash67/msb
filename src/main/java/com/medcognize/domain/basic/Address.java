// Generated by delombok at Sun May 08 23:43:45 EDT 2016
package com.medcognize.domain.basic;

import com.google.common.collect.BiMap;
import com.medcognize.domain.validator.jsr303.PhoneNumberOrBlank;
import com.medcognize.domain.validator.jsr303.UnitedStatesStateOrBlank;
import com.medcognize.domain.validator.jsr303.ZipCodeOrBlank;
import javax.persistence.Entity;
import java.io.Serializable;
// two addresses are equal if all the fields are equal
@Entity
public class Address extends DisplayFriendlyAbstractEntity implements Serializable {
    private static final String captionString = "address1:Address 1, address2:Address 2, city:City, state:State, zip:Zip, phoneNumber:Phone Number";
    @SuppressWarnings("UnusedDeclaration")
    public static final BiMap<String, String> captionMap = createBiMap(captionString);
    private String address1 = "";
    private String address2 = "";
    private String city = "";
    @UnitedStatesStateOrBlank
    private String state = "";
    @ZipCodeOrBlank
    private String zip = "";
    @PhoneNumberOrBlank
    private String phoneNumber = "";

    @Override
    public String toString() {
        if ((null == address1) || ("".equals(address1))) {
            if ((null == city) || ("".equals(city))) {
                return state + " " + zip;
            }
        }
        return address1 + ", " + city + ", " + state + " " + zip;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getAddress1() {
        return this.address1;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getAddress2() {
        return this.address2;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCity() {
        return this.city;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getState() {
        return this.state;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getZip() {
        return this.zip;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setAddress1(final String address1) {
        this.address1 = address1;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setAddress2(final String address2) {
        this.address2 = address2;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setCity(final String city) {
        this.city = city;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setState(final String state) {
        this.state = state;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setZip(final String zip) {
        this.zip = zip;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setPhoneNumber(final String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Address() {
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Address)) return false;
        final Address other = (Address) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$address1 = this.getAddress1();
        final java.lang.Object other$address1 = other.getAddress1();
        if (this$address1 == null ? other$address1 != null : !this$address1.equals(other$address1)) return false;
        final java.lang.Object this$address2 = this.getAddress2();
        final java.lang.Object other$address2 = other.getAddress2();
        if (this$address2 == null ? other$address2 != null : !this$address2.equals(other$address2)) return false;
        final java.lang.Object this$city = this.getCity();
        final java.lang.Object other$city = other.getCity();
        if (this$city == null ? other$city != null : !this$city.equals(other$city)) return false;
        final java.lang.Object this$state = this.getState();
        final java.lang.Object other$state = other.getState();
        if (this$state == null ? other$state != null : !this$state.equals(other$state)) return false;
        final java.lang.Object this$zip = this.getZip();
        final java.lang.Object other$zip = other.getZip();
        if (this$zip == null ? other$zip != null : !this$zip.equals(other$zip)) return false;
        final java.lang.Object this$phoneNumber = this.getPhoneNumber();
        final java.lang.Object other$phoneNumber = other.getPhoneNumber();
        if (this$phoneNumber == null ? other$phoneNumber != null : !this$phoneNumber.equals(other$phoneNumber)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Address;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $address1 = this.getAddress1();
        result = result * PRIME + ($address1 == null ? 43 : $address1.hashCode());
        final java.lang.Object $address2 = this.getAddress2();
        result = result * PRIME + ($address2 == null ? 43 : $address2.hashCode());
        final java.lang.Object $city = this.getCity();
        result = result * PRIME + ($city == null ? 43 : $city.hashCode());
        final java.lang.Object $state = this.getState();
        result = result * PRIME + ($state == null ? 43 : $state.hashCode());
        final java.lang.Object $zip = this.getZip();
        result = result * PRIME + ($zip == null ? 43 : $zip.hashCode());
        final java.lang.Object $phoneNumber = this.getPhoneNumber();
        result = result * PRIME + ($phoneNumber == null ? 43 : $phoneNumber.hashCode());
        return result;
    }
}

// Generated by delombok at Sun May 08 23:43:45 EDT 2016
package com.medcognize.domain;

import com.google.common.collect.BiMap;
import com.medcognize.domain.basic.DisplayFriendlyAbstractEntity;
import com.medcognize.domain.validator.jsr303.PhoneNumberOrBlank;
import com.medcognize.domain.validator.jsr303.UnitedStatesStateOrBlank;
import com.medcognize.domain.validator.jsr303.ZipCodeOrBlank;
import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.URL;
import javax.persistence.Entity;
import java.io.Serializable;
// a provider equals another if it has the same name.  The names should be unique.  If you have
// two Dr. Smiths, name the second "Dr. Smith 2" or something
@Entity
public class Provider extends DisplayFriendlyAbstractEntity implements Serializable {
	private static final String captionString = "providerName:Name, providerInPlan:In Plan, providerType:Provider Type, providerId:Provider Id, address1:Address 1, address2:Address 2, city:City, state:State, zip:Zip, phoneNumber:Phone Number, website:Website";


	public static enum ProviderType {
		PRIMARY, SPECIALIST, PHARMACY, HOSPITAL, OTHER;
	}

	public static final ProviderType defaultProviderType = ProviderType.PRIMARY;
	private static final String providerTypeCaptionString = ProviderType.PRIMARY.toString() + ":Primary Care Doctor," + " " + "" + ProviderType.SPECIALIST.toString() + ":Specialist," + ProviderType.PHARMACY.toString() + ":Pharmacy, " + "" + ProviderType.HOSPITAL.toString() + ":Hospital," + ProviderType.OTHER.toString() + ":Other";
	@SuppressWarnings("UnusedDeclaration")
	public static final BiMap<String, String> captionMap = createBiMap(captionString);
	public static final BiMap<String, String> providerTypeStringMap = createBiMap(providerTypeCaptionString);
	// was previously "name" and FamilyMember also had a "name" field which caused a conflict with JPA. So
	// changed it to be more specific. Not an issue with Objectify.
	@NotEmpty
	private String providerName = "";
	private boolean providerInPlan;
	private ProviderType providerType = defaultProviderType;
	private String providerId = "";
	private String address1 = "";
	private String address2 = "";
	private String city = "";
	@UnitedStatesStateOrBlank
	private String state = "";
	@ZipCodeOrBlank
	private String zip = "";
	@PhoneNumberOrBlank
	private String phoneNumber = "";
	@URL(message = "Not a valid URL")
	private String website;

	@Override
	public String toString() {
		return providerName;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getProviderName() {
		return this.providerName;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isProviderInPlan() {
		return this.providerInPlan;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public ProviderType getProviderType() {
		return this.providerType;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getProviderId() {
		return this.providerId;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAddress1() {
		return this.address1;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAddress2() {
		return this.address2;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getCity() {
		return this.city;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getState() {
		return this.state;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getZip() {
		return this.zip;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getWebsite() {
		return this.website;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setProviderName(final String providerName) {
		this.providerName = providerName;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setProviderInPlan(final boolean providerInPlan) {
		this.providerInPlan = providerInPlan;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setProviderType(final ProviderType providerType) {
		this.providerType = providerType;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setProviderId(final String providerId) {
		this.providerId = providerId;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAddress1(final String address1) {
		this.address1 = address1;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAddress2(final String address2) {
		this.address2 = address2;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setCity(final String city) {
		this.city = city;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setState(final String state) {
		this.state = state;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setZip(final String zip) {
		this.zip = zip;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setPhoneNumber(final String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setWebsite(final String website) {
		this.website = website;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Provider() {
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Provider)) return false;
		final Provider other = (Provider) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$providerName = this.getProviderName();
		final java.lang.Object other$providerName = other.getProviderName();
		if (this$providerName == null ? other$providerName != null : !this$providerName.equals(other$providerName)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Provider;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $providerName = this.getProviderName();
		result = result * PRIME + ($providerName == null ? 43 : $providerName.hashCode());
		return result;
	}
}
